digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "dul:Concept" "59056ebf:18c67b003bd:-7fed" "59056ebf:18c67b003bd:-7fd6" "base:NotPayingTaxesTransaction" "base:TaxingAgentState" "base:TaxingAgent" "base:NormativeSystemAlignment" "base:MoneyTransaction" "59056ebf:18c67b003bd:-7fdf" "dul:Parameter" "dul:EventType" "base:TaxingSystem" "base:PayingTaxesTransaction" "59056ebf:18c67b003bd:-7fd9" "base:NormativeSystem" "59056ebf:18c67b003bd:-7fda" "base:ParametricNorm" "dul:Role" ; /*classes style*/
	"base:aggregatedFairnessEqualityOutPath1" -> "base:taxSystemState4" [ label = "vae:measuredOnOutcome" ];
	"base:aggregatedFairnessEqualityOutPath1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:aggregatedFairnessEqualityOutPath1" -> "base:fairnessSemanticsTaxingOutPath1" [ label = "dul:hasConstituent" ];
	"base:aggregatedFairnessEqualityOutPath1" -> "base:equalitySemanticsTaxingOutPath1" [ label = "dul:hasConstituent" ];
	"base:path1transition3" -> "base:taxSystemState4" [ label = "vae:hasOutcome" ];
	"base:path1transition3" -> "base:taxSystemState3" [ label = "vae:hasInput" ];
	"base:path1transition3" -> "base:jointMoneyTransaction" [ label = "vae:hasInput" ];
	"base:path1transition3" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:evaderAgent1State4" -> "base:evaderAgent1" [ label = "vae:isStateOfAgent" ];
	"base:evaderAgent1State4" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:payerAgent1State2" -> "base:payerAgent1" [ label = "vae:isStateOfAgent" ];
	"base:payerAgent1State2" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:taxSystemPath1" -> "base:path1transition1" [ label = "vae:startsWithInputOutcome" ];
	"base:taxSystemPath1" -> "base:fairnessValueTaxing" [ label = "vae:abidesByValue" ];
	"base:taxSystemPath1" -> "base:equalityValueTaxing" [ label = "vae:abidesByValue" ];
	"base:taxSystemPath1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm1_eq" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:parametricNorm1_eq" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:parametricNorm1_eq" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm1_eq" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm1_eq" -> "base:optimizedNormativeSystemForEquality" [ label = "dul:isMemberOf" ];
	"base:parametricNorm1_eq" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm1_eq" -> "base:collect" [ label = "dul:hasParameter" ];
	"base:belongsToSegment" -> "dul:hasDataValue" [ label = "rdfs:subPropertyOf" ];
	"base:isOutStateOf" -> "dul:isConstituentOf" [ label = "rdfs:subPropertyOf" ];
	"base:hasWealth" -> "dul:hasDataValue" [ label = "rdfs:subPropertyOf" ];
	"base:taxSystemExecution2" -> "base:taxSystemTrace" [ label = "vae:isInputOutcomeOf" ];
	"dul:isParameterFor" -> "dul:isRelatedToConcept" [ label = "rdfs:subPropertyOf" ];
	"base:redistribute" -> "base:redistributeSegment5" [ label = "dul:hasPart" ];
	"base:redistribute" -> "base:redistributeSegment4" [ label = "dul:hasPart" ];
	"base:redistribute" -> "base:redistributeSegment3" [ label = "dul:hasPart" ];
	"base:redistribute" -> "base:redistributeSegment2" [ label = "dul:hasPart" ];
	"base:redistribute" -> "base:redistributeSegment1" [ label = "dul:hasPart" ];
	"base:TaxingAgent" -> "base:TaxingSystem" [ label = "owl:disjointWith" ];
	"base:hasProbabilityOrFraction" -> "dul:hasParameterDataValue" [ label = "rdfs:subPropertyOf" ];
	"base:equalityValueTaxing" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:alignmentStatementOnNormativeSystemForEquality" -> "base:optimizedNormativeSystemForEquality" [ label = "vae:onEntity" ];
	"base:alignmentStatementOnNormativeSystemForEquality" -> "base:equalityValueTaxing" [ label = "vae:interpretationOn" ];
	"base:alignmentStatementOnNormativeSystemForFairness" -> "base:optimizedNormativeSystemForFairness" [ label = "vae:onEntity" ];
	"base:alignmentStatementOnNormativeSystemForFairness" -> "base:fairnessValueTaxing" [ label = "vae:interpretationOn" ];
	"base:taxSystemState4" -> "base:taxSystemPath1" [ label = "base:isOutStateOf" ];
	"base:taxSystemState4" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:taxSystemState4" -> "base:payerAgent1State4" [ label = "dul:hasConstituent" ];
	"base:taxSystemState4" -> "base:evaderAgent1State4" [ label = "dul:hasConstituent" ];
	"base:path1transition2" -> "base:path1transition3" [ label = "vae:nextInputOutcome" ];
	"base:path1transition2" -> "base:taxSystemState3" [ label = "vae:hasOutcome" ];
	"base:path1transition2" -> "base:taxSystemState2" [ label = "vae:hasInput" ];
	"base:path1transition2" -> "base:jointMoneyTransaction" [ label = "vae:hasInput" ];
	"base:path1transition2" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:evaderAgent1State3" -> "base:evaderAgent1" [ label = "vae:isStateOfAgent" ];
	"base:evaderAgent1State3" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:payerAgent1State1" -> "base:payerAgent1" [ label = "vae:isStateOfAgent" ];
	"base:payerAgent1State1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:optimalAlignmentStatementOnNormativeSystemForEquality" -> "base:optimizedNormativeSystemForEquality" [ label = "vae:onEntity" ];
	"base:optimalAlignmentStatementOnNormativeSystemForEquality" -> "base:equalityValueTaxing" [ label = "vae:interpretationOn" ];
	"base:optimalAlignmentStatementOnNormativeSystemForEquality" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:optimalAlignmentStatementOnNormativeSystemForFairness" -> "base:optimizedNormativeSystemForFairness" [ label = "vae:onEntity" ];
	"base:optimalAlignmentStatementOnNormativeSystemForFairness" -> "base:fairnessValueTaxing" [ label = "vae:interpretationOn" ];
	"base:optimalAlignmentStatementOnNormativeSystemForFairness" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm2_fair" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:parametricNorm2_fair" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:parametricNorm2_fair" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm2_fair" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm2_fair" -> "base:optimizedNormativeSystemForFairness" [ label = "dul:isMemberOf" ];
	"base:parametricNorm2_fair" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm2_fair" -> "base:redistributeF" [ label = "dul:hasParameter" ];
	"base:path2transition2" -> "base:taxSystemPath2" [ label = "vae:isInputOutcomeOf" ];
	"base:path2transition2" -> "base:taxSystemState2" [ label = "vae:hasOutcome" ];
	"base:path2transition2" -> "base:taxSystemState3" [ label = "vae:hasInput" ];
	"base:path2transition2" -> "base:jointMoneyTransaction" [ label = "vae:hasInput" ];
	"base:path2transition2" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:criterionNormativeSystemAlignment" -> "base:fairnessValueTaxing" [ label = "vae:interpretationOn" ];
	"base:criterionNormativeSystemAlignment" -> "base:equalityValueTaxing" [ label = "vae:interpretationOn" ];
	"base:criterionNormativeSystemAlignment" -> "base:targetPropertyOptimizedAtAction" [ label = "odrl:constraint" ];
	"base:criterionNormativeSystemAlignment" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:taxSystemExecution1" -> "base:taxSystemExecution2" [ label = "vae:nextInputOutcome" ];
	"base:taxSystemExecution1" -> "base:taxSystemTrace" [ label = "vae:isInputOutcomeOf" ];
	"base:parametricNorm1_fair" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:parametricNorm1_fair" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:parametricNorm1_fair" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm1_fair" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm1_fair" -> "base:optimizedNormativeSystemForFairness" [ label = "dul:isMemberOf" ];
	"base:parametricNorm1_fair" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm1_fair" -> "base:collectF" [ label = "dul:hasParameter" ];
	"base:jointMoneyTransaction" -> "base:path1transition1" [ label = "vae:isInputOf" ];
	"base:jointMoneyTransaction" -> "base:taxSystemActionSequence" [ label = "vae:composedBySequence" ];
	"base:jointMoneyTransaction" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:jointMoneyTransaction" -> "base:payerAgent1" [ label = "dul:hasParticipant" ];
	"base:jointMoneyTransaction" -> "base:evaderAgent1" [ label = "dul:hasParticipant" ];
	"base:taxSystemTrace" -> "base:taxSystemExecution1" [ label = "vae:startsWithInputOutcome" ];
	"base:problemModeller" -> "base:optimalAlignmentStatementOnNormativeSystemForFairness" [ label = "vae:proposesStatement" ];
	"base:problemModeller" -> "base:optimalAlignmentStatementOnNormativeSystemForEquality" [ label = "vae:proposesStatement" ];
	"base:problemModeller" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:transactionPayingTaxes" -> "base:payerAgent1" [ label = "vae:madeByAgent" ];
	"base:transactionPayingTaxes" -> "base:fairnessValueTaxing" [ label = "vae:abidesByValue" ];
	"base:transactionPayingTaxes" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:transactionPayingTaxes" -> "base:evaderAgent1" [ label = "dul:hasParticipant" ];
	"base:collectF" -> "base:collectFSegment5" [ label = "dul:hasPart" ];
	"base:collectF" -> "base:collectFSegment4" [ label = "dul:hasPart" ];
	"base:collectF" -> "base:collectFSegment3" [ label = "dul:hasPart" ];
	"base:collectF" -> "base:collectFSegment2" [ label = "dul:hasPart" ];
	"base:collectF" -> "base:collectFSegment1" [ label = "dul:hasPart" ];
	"dul:Parameter" -> "dul:Role" [ label = "owl:disjointWith" ];
	"https://w3id.org/def/vaeontology_montes_sierra" -> "https://w3id.org/def/vaeontology_montes_sierra" [ label = "owl:versionIRI" ];
	"https://w3id.org/def/vaeontology_montes_sierra" -> "https://w3id.org/def/vaeontology" [ label = "owl:imports" ];
	"base:redistribution" -> "base:taxingSystem" [ label = "vae:madeByAgent" ];
	"base:redistribution" -> "base:path1transition1" [ label = "vae:isOutcomeOf" ];
	"base:redistribution" -> "base:equalityValueTaxing" [ label = "vae:abidesByValue" ];
	"base:redistribution" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:redistribution" -> "base:payerAgent1" [ label = "dul:hasParticipant" ];
	"base:redistribution" -> "base:evaderAgent1" [ label = "dul:hasParticipant" ];
	"base:alignmentPropertyOnNormativeSystemForEquality" -> "base:equalityValueTaxing" [ label = "vae:relationWith" ];
	"base:alignmentPropertyOnNormativeSystemForEquality" -> "base:alignmentStatementOnNormativeSystemForEquality" [ label = "vae:propertyExpressedAt" ];
	"base:alignmentPropertyOnNormativeSystemForEquality" -> "base:taxSystemState4" [ label = "vae:measuredOnOutcome" ];
	"base:alignmentPropertyOnNormativeSystemForEquality" -> "base:taxSystemState2" [ label = "vae:measuredOnOutcome" ];
	"base:alignmentPropertyOnNormativeSystemForFairness" -> "base:fairnessValueTaxing" [ label = "vae:relationWith" ];
	"base:alignmentPropertyOnNormativeSystemForFairness" -> "base:alignmentStatementOnNormativeSystemForFairness" [ label = "vae:propertyExpressedAt" ];
	"base:alignmentPropertyOnNormativeSystemForFairness" -> "base:taxSystemState4" [ label = "vae:measuredOnOutcome" ];
	"base:alignmentPropertyOnNormativeSystemForFairness" -> "base:taxSystemState2" [ label = "vae:measuredOnOutcome" ];
	"base:taxSystemState3" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:taxSystemState3" -> "base:payerAgent1State3" [ label = "dul:hasConstituent" ];
	"base:taxSystemState3" -> "base:evaderAgent1State3" [ label = "dul:hasConstituent" ];
	"base:path1transition1" -> "base:path1transition2" [ label = "vae:nextInputOutcome" ];
	"base:path1transition1" -> "base:taxSystemState2" [ label = "vae:hasOutcome" ];
	"base:path1transition1" -> "base:taxSystemState1" [ label = "vae:hasInput" ];
	"base:path1transition1" -> "base:jointMoneyTransaction" [ label = "vae:hasInput" ];
	"base:path1transition1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:evaderAgent1State2" -> "base:evaderAgent1" [ label = "vae:isStateOfAgent" ];
	"base:evaderAgent1State2" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:hasOutState" -> "dul:hasConstituent" [ label = "rdfs:subPropertyOf" ];
	"base:fairnessValueTaxing" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm4_fair" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:parametricNorm4_fair" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:parametricNorm4_fair" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm4_fair" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm4_fair" -> "base:optimizedNormativeSystemForFairness" [ label = "dul:isMemberOf" ];
	"base:parametricNorm4_fair" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm4_fair" -> "base:fineF" [ label = "dul:hasParameter" ];
	"base:alignmentArgumentationOnOptimallyAlignedNormativeSystemsForEquality" -> "base:criterionNormativeSystemAlignment" [ label = "vae:isBasedOnCriterion" ];
	"base:alignmentArgumentationOnOptimallyAlignedNormativeSystemsForEquality" -> "base:alignmentStatementOnNormativeSystemForEquality" [ label = "vae:hasPremise" ];
	"base:alignmentArgumentationOnOptimallyAlignedNormativeSystemsForEquality" -> "base:optimalAlignmentStatementOnNormativeSystemForEquality" [ label = "vae:hasClaim" ];
	"base:alignmentArgumentationOnOptimallyAlignedNormativeSystemsForFairness" -> "base:criterionNormativeSystemAlignment" [ label = "vae:isBasedOnCriterion" ];
	"base:alignmentArgumentationOnOptimallyAlignedNormativeSystemsForFairness" -> "base:alignmentStatementOnNormativeSystemForFairness" [ label = "vae:hasPremise" ];
	"base:alignmentArgumentationOnOptimallyAlignedNormativeSystemsForFairness" -> "base:optimalAlignmentStatementOnNormativeSystemForFairness" [ label = "vae:hasClaim" ];
	"base:taxingSystem" -> "base:taxSystemState1" [ label = "vae:hasState" ];
	"base:taxingSystem" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:path2transition1" -> "base:path2transition2" [ label = "vae:nextInputOutcome" ];
	"base:path2transition1" -> "base:taxSystemState3" [ label = "vae:hasOutcome" ];
	"base:path2transition1" -> "base:taxSystemState1" [ label = "vae:hasInput" ];
	"base:path2transition1" -> "base:jointMoneyTransaction" [ label = "vae:hasInput" ];
	"base:path2transition1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm3_fair" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:parametricNorm3_fair" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:parametricNorm3_fair" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm3_fair" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm3_fair" -> "base:optimizedNormativeSystemForFairness" [ label = "dul:isMemberOf" ];
	"base:parametricNorm3_fair" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm3_fair" -> "base:catchF" [ label = "dul:hasParameter" ];
	"base:targetPropertyOptimizedAtAction" -> "base:optimalAlignmentPropertyOnNormativeSystemForEquality" [ label = "odrl:rightOperand" ];
	"base:targetPropertyOptimizedAtAction" -> "base:operatorIsOptimizedAt" [ label = "odrl:operator" ];
	"base:targetPropertyOptimizedAtAction" -> "base:alignmentPropertyOnNormativeSystemForEquality" [ label = "odrl:leftOperand" ];
	"dul:EventType" -> "dul:Parameter" [ label = "owl:disjointWith" ];
	"base:payerAgent1" -> "base:taxingSystem" [ label = "vae:isAgentOfSystem" ];
	"base:payerAgent1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:collect" -> "base:collectSegment5" [ label = "dul:hasPart" ];
	"base:collect" -> "base:collectSegment4" [ label = "dul:hasPart" ];
	"base:collect" -> "base:collectSegment3" [ label = "dul:hasPart" ];
	"base:collect" -> "base:collectSegment2" [ label = "dul:hasPart" ];
	"base:collect" -> "base:collectSegment1" [ label = "dul:hasPart" ];
	"base:evaderAgent1" -> "base:taxingSystem" [ label = "vae:isAgentOfSystem" ];
	"base:evaderAgent1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:transactionsStep" -> "base:redistributionStep" [ label = "vae:nextInputOutcome" ];
	"base:transactionsStep" -> "base:taxSystemActionSequence" [ label = "vae:isStartOfSequence" ];
	"base:transactionsStep" -> "base:transactionPayingTaxes" [ label = "vae:hasOutcome" ];
	"base:transactionsStep" -> "base:transactionNotPayingTaxes" [ label = "vae:hasOutcome" ];
	"base:equalitySemanticsTaxingOutPath1" -> "base:taxSystemState4" [ label = "vae:measuredOnOutcome" ];
	"base:equalitySemanticsTaxingOutPath1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:taxSystemState2" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:taxSystemState2" -> "base:payerAgent1State2" [ label = "dul:hasConstituent" ];
	"base:taxSystemState2" -> "base:evaderAgent1State2" [ label = "dul:hasConstituent" ];
	"base:optimizedNormativeSystemForEquality" -> "base:transactionPayingTaxes" [ label = "vae:influencesOutcome" ];
	"base:optimizedNormativeSystemForEquality" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:optimizedNormativeSystemForEquality" -> "base:collect" [ label = "dul:hasParameter" ];
	"base:optimizedNormativeSystemForEquality" -> "base:fine" [ label = "dul:hasParameter" ];
	"base:optimizedNormativeSystemForEquality" -> "base:taxSystemPath1" [ label = "vae:influencesOutcome" ];
	"base:optimizedNormativeSystemForEquality" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:optimizedNormativeSystemForEquality" -> "base:taxSystemPath2" [ label = "vae:influencesOutcome" ];
	"base:optimizedNormativeSystemForEquality" -> "base:redistribute" [ label = "dul:hasParameter" ];
	"base:optimizedNormativeSystemForEquality" -> "base:catch" [ label = "dul:hasParameter" ];
	"base:optimizedNormativeSystemForEquality" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:optimizedNormativeSystemForEquality" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:optimizedNormativeSystemForEquality" -> "base:equalityValueTaxing" [ label = "vae:reflectsValue" ];
	"base:optimizedNormativeSystemForEquality" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:redistributionStep" -> "base:taxSystemActionSequence" [ label = "vae:isInputOutcomeOf" ];
	"base:redistributionStep" -> "base:redistribution" [ label = "vae:hasOutcome" ];
	"base:redistributionStep" -> "base:transactionsStep" [ label = "vae:hasInput" ];
	"base:optimizedNormativeSystemForFairness" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:optimizedNormativeSystemForFairness" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:optimizedNormativeSystemForFairness" -> "base:redistributeF" [ label = "dul:hasParameter" ];
	"base:optimizedNormativeSystemForFairness" -> "base:taxSystemPath2" [ label = "vae:influencesOutcome" ];
	"base:optimizedNormativeSystemForFairness" -> "base:taxSystemPath1" [ label = "vae:influencesOutcome" ];
	"base:optimizedNormativeSystemForFairness" -> "base:fairnessValueTaxing" [ label = "vae:reflectsValue" ];
	"base:optimizedNormativeSystemForFairness" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:optimizedNormativeSystemForFairness" -> "base:catchF" [ label = "dul:hasParameter" ];
	"base:optimizedNormativeSystemForFairness" -> "base:collectF" [ label = "dul:hasParameter" ];
	"base:optimizedNormativeSystemForFairness" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:optimizedNormativeSystemForFairness" -> "base:fineF" [ label = "dul:hasParameter" ];
	"base:optimizedNormativeSystemForFairness" -> "base:transactionPayingTaxes" [ label = "vae:influencesOutcome" ];
	"base:optimizedNormativeSystemForFairness" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:evaderAgent1State1" -> "base:evaderAgent1" [ label = "vae:isStateOfAgent" ];
	"base:evaderAgent1State1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fd2" [ label = "rdf:rest" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fe5" [ label = "rdf:rest" ];
	"NULL" -> "dul:Region" [ label = "owl:allValuesFrom" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fed" [ label = "owl:someValuesFrom" ];
	"NULL" -> "59056ebf:18c67b003bd:-7ff8" [ label = "rdf:rest" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fd8" [ label = "owl:intersectionOf" ];
	"NULL" -> "dul:hasPart" [ label = "owl:onProperty" ];
	"NULL" -> "base:NormativeSystemAlignment" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:MoneyTransaction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fd0" [ label = "rdf:rest" ];
	"NULL" -> "base:NotPayingTaxesTransaction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fe4" [ label = "rdf:first" ];
	"NULL" -> "vae:onEntity" [ label = "owl:onProperty" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fec" [ label = "owl:intersectionOf" ];
	"NULL" -> "vae:SemanticsFunction" [ label = "owl:someValuesFrom" ];
	"NULL" -> "dul:hasConstituent" [ label = "owl:onProperty" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fdc" [ label = "rdf:rest" ];
	"NULL" -> "59056ebf:18c67b003bd:-7ff2" [ label = "rdf:first" ];
	"NULL" -> "vae:Equality" [ label = "owl:allValuesFrom" ];
	"NULL" -> "vae:isStateOfAgent" [ label = "owl:onProperty" ];
	"NULL" -> "base:isOutStateOf" [ label = "owl:onProperty" ];
	"NULL" -> "base:TaxingSystem" [ label = "owl:someValuesFrom" ];
	"NULL" -> "vae:Path" [ label = "rdf:first" ];
	"NULL" -> "dul:hasParameter" [ label = "owl:onProperty" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fe8" [ label = "owl:allValuesFrom" ];
	"NULL" -> "xsd:decimal" [ label = "owl:onDatatype" ];
	"NULL" -> "vae:satisfiesNorm" [ label = "owl:onProperty" ];
	"NULL" -> "base:NormativeSystem" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasOutState" [ label = "owl:onProperty" ];
	"NULL" -> "59056ebf:18c67b003bd:-7ff7" [ label = "rdf:rest" ];
	"NULL" -> "59056ebf:18c67b003bd:-7ff4" [ label = "rdf:first" ];
	"NULL" -> "vae:AlignmentStatement" [ label = "rdf:first" ];
	"NULL" -> "base:TaxingAgent" [ label = "owl:someValuesFrom" ];
	"NULL" -> "vae:propertyOptimizedAt" [ label = "owl:onProperty" ];
	"NULL" -> "rdf:nil" [ label = "rdf:rest" ];
	"NULL" -> "59056ebf:18c67b003bd:-7ffb" [ label = "owl:oneOf" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fea" [ label = "rdf:rest" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fda" [ label = "owl:allValuesFrom" ];
	"NULL" -> "vae:propertyExpressedAt" [ label = "owl:onProperty" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fde" [ label = "owl:intersectionOf" ];
	"NULL" -> "dul:classifies" [ label = "owl:onProperty" ];
	"NULL" -> "base:ParametricNorm" [ label = "owl:someValuesFrom" ];
	"NULL" -> "vae:relationWith" [ label = "owl:onProperty" ];
	"NULL" -> "vae:FinalInputOutcome" [ label = "owl:someValuesFrom" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fd7" [ label = "owl:unionOf" ];
	"NULL" -> "vae:isOutcomeOf" [ label = "owl:onProperty" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fd9" [ label = "rdf:first" ];
	"NULL" -> "59056ebf:18c67b003bd:-7ffa" [ label = "rdf:rest" ];
	"NULL" -> "vae:makesAction" [ label = "owl:onProperty" ];
	"NULL" -> "59056ebf:18c67b003bd:-7ff9" [ label = "rdf:rest" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fe7" [ label = "owl:withRestrictions" ];
	"NULL" -> "dul:isMemberOf" [ label = "owl:onProperty" ];
	"NULL" -> "base:TaxingAgentState" [ label = "owl:onClass" ];
	"NULL" -> "rdf:value" [ label = "owl:onProperty" ];
	"NULL" -> "dul:Parameter" [ label = "owl:allValuesFrom" ];
	"NULL" -> "vae:measuredOnOutcome" [ label = "owl:onProperty" ];
	"NULL" -> "59056ebf:18c67b003bd:-7ff3" [ label = "rdf:rest" ];
	"NULL" -> "owl:real" [ label = "owl:onDatatype" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fd4" [ label = "owl:intersectionOf" ];
	"NULL" -> "base:PayingTaxesTransaction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "59056ebf:18c67b003bd:-7ff5" [ label = "owl:withRestrictions" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fe6" [ label = "rdf:first" ];
	"NULL" -> "dul:Parameter" [ label = "owl:onClass" ];
	"NULL" -> "vae:Path" [ label = "owl:someValuesFrom" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fd6" [ label = "rdf:first" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fd5" [ label = "rdf:rest" ];
	"NULL" -> "vae:State" [ label = "rdf:first" ];
	"NULL" -> "59056ebf:18c67b003bd:-7fdf" [ label = "owl:someValuesFrom" ];
	"base:fairnessSemanticsTaxingOutPath1" -> "base:taxSystemState4" [ label = "vae:measuredOnOutcome" ];
	"base:fairnessSemanticsTaxingOutPath1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:redistributeF" -> "base:redistributeFSegment5" [ label = "dul:hasPart" ];
	"base:redistributeF" -> "base:redistributeFSegment4" [ label = "dul:hasPart" ];
	"base:redistributeF" -> "base:redistributeFSegment3" [ label = "dul:hasPart" ];
	"base:redistributeF" -> "base:redistributeFSegment2" [ label = "dul:hasPart" ];
	"base:redistributeF" -> "base:redistributeFSegment1" [ label = "dul:hasPart" ];
	"base:payerAgent1State4" -> "base:payerAgent1" [ label = "vae:isStateOfAgent" ];
	"base:payerAgent1State4" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:taxSystemState1" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:taxSystemState1" -> "base:payerAgent1State1" [ label = "dul:hasConstituent" ];
	"base:taxSystemState1" -> "base:evaderAgent1State1" [ label = "dul:hasConstituent" ];
	"base:transactionNotPayingTaxes" -> "base:evaderAgent1" [ label = "vae:madeByAgent" ];
	"base:transactionNotPayingTaxes" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:transactionNotPayingTaxes" -> "base:payerAgent1" [ label = "dul:hasParticipant" ];
	"base:parametricNorm4_eq" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:parametricNorm4_eq" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:parametricNorm4_eq" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm4_eq" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm4_eq" -> "base:optimizedNormativeSystemForEquality" [ label = "dul:isMemberOf" ];
	"base:parametricNorm4_eq" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm4_eq" -> "base:fine" [ label = "dul:hasParameter" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForEquality" -> "base:optimalAlignmentStatementOnNormativeSystemForEquality" [ label = "vae:propertyExpressedAt" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForEquality" -> "base:taxSystemPath2" [ label = "vae:measuredOnOutcome" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForEquality" -> "base:taxSystemPath1" [ label = "vae:measuredOnOutcome" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForEquality" -> "base:taxSystemState4" [ label = "vae:measuredOnOutcome" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForEquality" -> "base:taxSystemState2" [ label = "vae:measuredOnOutcome" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForEquality" -> "base:alignmentPropertyOnNormativeSystemForEquality" [ label = "vae:isOptimizationOfProperty" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForEquality" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForFairness" -> "base:taxSystemPath2" [ label = "vae:measuredOnOutcome" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForFairness" -> "base:taxSystemState2" [ label = "vae:measuredOnOutcome" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForFairness" -> "base:alignmentPropertyOnNormativeSystemForFairness" [ label = "vae:isOptimizationOfProperty" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForFairness" -> "base:taxSystemPath1" [ label = "vae:measuredOnOutcome" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForFairness" -> "base:taxSystemState4" [ label = "vae:measuredOnOutcome" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForFairness" -> "base:optimalAlignmentStatementOnNormativeSystemForFairness" [ label = "vae:propertyExpressedAt" ];
	"base:optimalAlignmentPropertyOnNormativeSystemForFairness" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:NotPayingTaxesTransaction" -> "base:PayingTaxesTransaction" [ label = "owl:disjointWith" ];
	"base:parametricNorm3_eq" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:parametricNorm3_eq" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:parametricNorm3_eq" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm3_eq" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm3_eq" -> "base:optimizedNormativeSystemForEquality" [ label = "dul:isMemberOf" ];
	"base:parametricNorm3_eq" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm3_eq" -> "base:catch" [ label = "dul:hasParameter" ];
	"base:payerAgent1State3" -> "base:payerAgent1" [ label = "vae:isStateOfAgent" ];
	"base:payerAgent1State3" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:taxSystemPath2" -> "base:taxSystemState2" [ label = "base:hasOutState" ];
	"base:taxSystemPath2" -> "base:path2transition1" [ label = "vae:startsWithInputOutcome" ];
	"base:taxSystemPath2" -> "base:fairnessValueTaxing" [ label = "vae:abidesByValue" ];
	"base:taxSystemPath2" -> "base:equalityValueTaxing" [ label = "vae:abidesByValue" ];
	"base:taxSystemPath2" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"dul:hasParameter" -> "dul:isRelatedToConcept" [ label = "rdfs:subPropertyOf" ];
	"dul:hasParameterDataValue" -> "dul:hasDataValue" [ label = "rdfs:subPropertyOf" ];
	"base:parametricNorm2_eq" -> "base:taxingSystem" [ label = "odrl:target" ];
	"base:parametricNorm2_eq" -> "base:problemModeller" [ label = "odrl:assigner" ];
	"base:parametricNorm2_eq" -> "base:payerAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm2_eq" -> "base:evaderAgent1" [ label = "odrl:assignee" ];
	"base:parametricNorm2_eq" -> "base:optimizedNormativeSystemForEquality" [ label = "dul:isMemberOf" ];
	"base:parametricNorm2_eq" -> "base:taxProblemContext" [ label = "dul:hasSetting" ];
	"base:parametricNorm2_eq" -> "base:redistribute" [ label = "dul:hasParameter" ];
	"dul:isRelatedToConcept" -> "dul:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"dul:Parameter" -> "owl:Thing" [ label = "dul:parametrizes" ];
	"dul:Parameter" -> "59056ebf:18c67b003bd:-7ff6" [ label = "base:hasProbabilityOrFraction" ];
	"dul:Parameter" -> "dul:Concept" [ label = "dul:isParameterFor" ];
	"owl:Thing" -> "dul:Parameter" [ label = "dul:hasConstraint" ];
	"vae:Path" -> "vae:State" [ label = "base:hasOutState" ];
	"vae:State" -> "vae:Path" [ label = "base:isOutStateOf" ];
	"dul:Parameter" -> "owl:Thing" [ label = "dul:hasParameterDataValue" ];
	"dul:Concept" -> "dul:Concept" [ label = "dul:isRelatedToConcept" ];
	"base:TaxingAgentState" -> "xsd:decimal" [ label = "base:hasWealth" ];
	"dul:Parameter" -> "owl:Thing" [ label = "dul:isConstraintFor" ];
	"base:TaxingAgentState" -> "59056ebf:18c67b003bd:-7ffc" [ label = "base:belongsToSegment" ];
	"owl:Thing" -> "dul:Parameter" [ label = "dul:isParametrizedBy" ];
	"dul:Concept" -> "dul:Parameter" [ label = "dul:hasParameter" ];

}
